<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mytijian.admin.dao.rbac.dao.RoleDepartmentMapper">

	<resultMap id="roleDepartmentMapResult"
		type="com.mytijian.admin.dao.rbac.dataobject.RoleDepartmentDO">
		<id column="id" property="id" />
		<result column="gmt_created" property="gmtCreated" />
		<result column="gmt_modified" property="gmtModified" />
		<result column="permission_name" property="permissionName" />
		<result column="department_id" property="departmentId" />
		<result column="role_id" property="roleId" />
	</resultMap>

	<sql id="baseColumns">
		id,
		gmt_created,
		gmt_modified,
		permission_name,
		department_id,
		role_id
	</sql>

	<select id="selectById" parameterType="Integer" resultMap="roleDepartmentMapResult">
		SELECT
		<include refid="baseColumns" />
		FROM
		tb_role_department
		where id=#{id}
	</select>

	<select id="selectByDepartmentIdAndRoleId" resultMap="roleDepartmentMapResult">
		select
		<include refid="baseColumns" />
		from tb_role_department
		where status = 1
		<if test="departmentId != null">
			and department_id = #{departmentId}
		</if>
		<if test="roleIds != null and roleIds.size() > 0">
			and role_id in 
			<foreach collection="roleIds" index="index" item="roleId"
				open="(" separator="," close=")">
				#{roleId}
			</foreach>
		</if>
	</select>

	<select id="countByDepartmentIdAndRoleId" resultType="int">
		select count(*) from tb_role_department
		where status = 1
		<if test="departmentId != null">
			and department_id = #{departmentId}
		</if>
		<if test="roleId != null">
			and role_id = #{roleId}
		</if>
	</select>

	<insert id="insert"
		parameterType="com.mytijian.admin.dao.rbac.dataobject.RoleDepartmentDO"
		useGeneratedKeys="true" keyProperty="id">
		insert into tb_role_department
		(
		gmt_created,
		gmt_modified,
		permission_name,
		department_id,
		role_id,
		status
		)
		values
		(
		now(),
		now(),
		#{permissionName},
		#{departmentId},
		#{roleId},
		1
		)
	</insert>

	<update id="update"
		parameterType="com.mytijian.admin.dao.rbac.dataobject.RoleDepartmentDO">
		update tb_role_department set gmt_modified = now()
		<if test="permissionName != null">, permissionName = #{permissionName} </if>
		<if test="roleId != null">, roleId = #{roleId}</if>
		<if test="departmentId != null">, department_id = #{departmentId}</if>
		where id = #{id}
	</update>

	<delete id="deleteByDepartmentIdAndRoleId">
		update tb_role_department set gmt_modified= now(), status = 2
		<where>
			<if test="departmentId != null">
				and department_id = #{departmentId}
			</if>
			<if test="roleId != null">
				and role_id = #{roleId}
			</if>
		</where>
	</delete>

	<select id="listBydepartmentIdAndRoleIds" resultMap="roleDepartmentMapResult">
		SELECT
		<include refid="baseColumns" />
		FROM
		tb_role_department
		where department_id = #{departmentId} and
		role_id in
		<foreach collection="roleIds" index="index" item="roleId"
			open="(" separator="," close=")">
			#{roleId}
		</foreach>
	</select>

	<select id="selectRoleDepartments" resultMap="roleDepartmentMapResult">
		select
		<include refid="baseColumns" />
		from tb_role_department
		where status = 1
		<if test="permissionName != null and permissionName.trim() != ''">
			and `permission_name` like
			concat('%',#{permissionName},'%')
		</if>
		order by id asc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="countRoleDepartments" resultType="Integer">
		select
		count(*)
		from tb_role_department
		where status = 1
		<if test="permissionName != null and permissionName.trim() != ''">
			and `permission_name` like
			concat('%',#{permissionName},'%')
		</if>
	</select>

	<select id="selectByIds" resultMap="roleDepartmentMapResult">
		select
		<include refid="baseColumns" />
		from tb_role_department
		where id in
		<foreach collection="roleDepartmentIds" index="index"
			item="roleDepartmentId" open="(" separator="," close=")">
			#{roleDepartmentId}
		</foreach>
	</select>

	<update id="deleteById">
		update tb_role_department set
		gmt_modified=now(),
		status = 2 where id=#{id}
	</update>

	<update id="deleteBatch">
		update tb_role_department set gmt_modified=now(), status = 2 where id
		in
		<foreach collection="roleDepartmentIds" index="index"
			item="roleDepartmentId" open="(" separator="," close=")">
			#{roleDepartmentId}
		</foreach>
	</update>

	<select id="selectByNames" resultMap="roleDepartmentMapResult">
		SELECT
		rd.id,
		rd.gmt_created,
		rd.gmt_modified,
		rd.permission_name,
		rd.department_id,
		rd.role_id FROM tb_role_department rd
		LEFT JOIN
		tb_role
		r ON r.id = rd.role_id
		LEFT JOIN tb_department d ON d.id =
		rd.department_id
		where rd.status = 1
		<if test="permissionName != null and permissionName.trim() != ''">
			and rd.permission_name like
			concat('%',#{permissionName},'%')
		</if>
		<if test="departmentName != null and departmentName.trim() != ''">
			and d.department_name like
			concat('%',#{departmentName},'%')
		</if>
		<if test="roleName != null and roleName.trim() != ''">
			and r.role_name like concat('%',#{roleName},'%')
		</if>
		order by rd.id asc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="countByNames" resultType="Integer">
		SELECT count(rd.id) FROM tb_role_department rd
		LEFT JOIN tb_role
		r ON
		r.id = rd.role_id
		LEFT JOIN tb_department d ON d.id =
		rd.department_id
		where rd.status = 1
		<if test="permissionName != null and permissionName.trim() != ''">
			and rd.permission_name like
			concat('%',#{permissionName},'%')
		</if>
		<if test="departmentName != null and departmentName.trim() != ''">
			and d.department_name like
			concat('%',#{departmentName},'%')
		</if>
		<if test="roleName != null and roleName.trim() != ''">
			and r.role_name like concat('%',#{roleName},'%')
		</if>
	</select>

	<select id="selectBydepartmentIdAndRoleId" resultMap="roleDepartmentMapResult">
		select
		<include refid="baseColumns" />
		from tb_role_department
		where status = 1 and  department_id = #{departmentId} and role_id = #{roleId}
	</select>
</mapper>